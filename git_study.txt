1장. 깃과 버전관리

2장. 깃과 소스트리 설치 및 환경설정
git config --global user.name "이름"
git config --global user.email "이메일"
code 파일명

3장. 깃 개념잡기
git init .
git add 파일명
working directory -> stage -> repository

git status
vim .gitignore -> .gitignore \n main.py \n * ! #
git clone "https://~" 폴더이름

4장. 커밋
git add .
git rm --cached main.py
git mv 파일이름 새이름
git commit -am '메시지'
git config --global core.editor 'vim이외 에디터 경로'
git commit --allow-empty-message -am ""
git commit --amend (방금 커밋메시지 수정)
git log --pretty=short (앞줄)
git show '커밋ID'
git diff

5장. 서버
echo "# gitstudy" >> README.md
git add README.md
git commit

git remote add origin 원격주소
git remote -v
git push origin master

mkdir clone -> cd clone -> git clone "https"//~" . (최초)
git pull

git fetch "https://~"
git merge 원격저장소별칭/브랜치이름

git config --global credential.helper cache (임시 id,비번)


6장. 브랜치
git branch fooster
git checkout fooster
git log --graph --all
git checkout -b hotfix
git push origin fooster
git remote show origin (원격저장소 브랜치 목록)
git branch -v (로컬저장소 브랜치 목록)
타 브랜치로 이동 후 git branch -D fooster
git push origin --delete 리모트브랜치이름


7장. 임시 처리

